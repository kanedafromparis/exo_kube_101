apiVersion: batch/v1
kind: Job
metadata:
  labels:
    run: fill-in
  name: fill-in
spec:
  backoffLimit: 6
  completions: 20
  parallelism: 5
  activeDeadlineSeconds: 300
  #  selector:
  #    matchLabels:
  #      controller-uid: 
  template:
    metadata:
      creationTimestamp: null
      labels:
        job-name: fill-in
        run: fill-in
    spec:
      containers:
      - command: ["/bin/sh"]
        args: ["-c", "curl \"http://cheers:8080/api/1.0/cheers\" -H 'Origin: http://cheers:8080' -H 'Accept-Encoding: gzip, deflate'  -H 'Accept-Language: en-US,en;q=0.9' -H 'Content-Type: application/json;charset=UTF-8' -H 'Accept: application/json, text/plain, */*' -H 'Referer: http://cheers:8080/assets/cheers.html' -H 'X-Requested-With: XMLHttpRequest' -H 'Connection: keep-alive' --data-binary '{\"intro\":\"I am a big fan\",\"cause\":\"You R the best\"}' --compressed"]
        image: kanedafromparis/pwgen:0.1
        imagePullPolicy: IfNotPresent
        name: fill-in
        resources: {}
        stdin: true
        stdinOnce: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 5
